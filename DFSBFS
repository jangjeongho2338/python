from collections import deque

# DFS 정의 (재귀)
def dfs(graph, v, visited):
    visited[v] = True
    print(v, end=' ')
    for i in sorted(graph[v]):
        if not visited[i]:
            dfs(graph, i, visited)

# BFS 정의 (큐 사용)
def bfs(graph, start, visited):
    queue = deque([start])
    visited[start] = True
    while queue:
        v = queue.popleft()
        print(v, end=' ')
        for i in sorted(graph[v]):
            if not visited[i]:
                queue.append(i)
                visited[i] = True

# 입력 받기
n, m, v = map(int, input().split())  # 노드 개수, 간선 개수, 시작 노드
graph = [[] for _ in range(n + 1)]  # 인접 리스트 초기화

# 간선 정보 입력
for _ in range(m):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)  # 양방향

# 방문 정보 초기화 및 실행
visited_dfs = [False] * (n + 1)
dfs(graph, v, visited_dfs)
print()

visited_bfs = [False] * (n + 1)
bfs(graph, v, visited_bfs)
